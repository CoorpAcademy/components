const fs = require('fs');
const glob = require('glob');
const path = require('path');
const pascalCase = require('pascal-case');

function reset(index) {
  const title = '/* Generated by src/util/generate-components-index */\n\n';
  fs.writeFileSync(index, title);
}

function extractElements() {
  const components = '../components/{atom,molecule,organism}/**/*.js';
  const files = glob.sync(path.join(__dirname, components));
  const elements = files.map(function(file) {
    const splinters = file.split('/');
    const type = splinters[splinters.length - 3];
    const component = splinters[splinters.length - 2];

    return {
      factory: `create${pascalCase(component)}`,
      path: `./${path.join(type, component)}`
    };
  });

  return elements;
}

function _exports(elements) {
  const factories = elements.map(function(element) {
    return element.factory;
  });

  return `  ${factories.join(',\n  ')}`;
}

function _imports(elements) {
  const lines = elements.map(function(element) {
    return `import ${element.factory} from '${element.path}'`;
  });

  return `${lines.join(';\n')};`;
}

function generate() {
  const index = path.join(__dirname, '../components/index.js');
  const elements = extractElements();

  reset(index);
  fs.appendFileSync(index, `${_imports(elements)}\n`);
  fs.appendFileSync(index, `\nexport {\n${_exports(elements)}\n};\n`);
}

generate();
