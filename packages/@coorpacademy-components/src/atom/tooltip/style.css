@value colors: "../../variables/colors.css";
@value cm_blue_900 from colors;
@value cm_grey_75 from colors;
@value cm_grey_500 from colors;
@value cm_grey_700 from colors;

.textBase {
  font-family: "Gilroy";
  font-style: normal;
  color: cm_blue_900;
  user-select: none;
}

.tooltipContainer {
  overflow: visible;
  position: relative;
  z-index: 10;
  display: flex;
  justify-content: center;
  justify-self: center;
}

.tooltipIconContainer {
  display: flex;
  justify-content: flex-end;
  border: none;
  background: cm_grey_75;
  height: 25px;
  align-items: center;
}

.toolTip {
  transition: opacity 0.8s;
  position: absolute;
  border-radius: 7px;
  background-color: cm_grey_700;
  height: auto;
  width: 200px;
}

.bigIconToolTip {
  right: -71px;
  bottom: 31px;
}

.smallIconToolTip {
  right: -75px;
  bottom: 32px;
}

.toolTip::before {
  content: '';
  display: inline-block;
  visibility: inherit;
  opacity: inherit;
  width: 15px;
  height: 15px;
  transform: rotate(-45deg);
  background-color: inherit;
  position: inherit;
  border-radius: 2px;
  bottom: -5px;
  right: 40%;
}

.tooltipContent {
  composes: textBase;
  font-weight: 500;
  font-size: 14px;
  display: inline-block;
  border-radius: 3px;
  word-wrap: break-word;
  color: white;
  padding: 8px 14px;
  text-align: center;
}

.tooltipContentFontSize14 {
  font-size: 14px;
}

.tooltipContentFontSize12 {
  font-size: 12px;
}


.informationIcon {
  color: cm_grey_500;
}

/* ----------------------- ReactToolTip exclusive classes ------------------------- */
.toolTipReact {
  pointer-events: all !important;
  background-color: cm_grey_700;
  border-radius: 7px !important;
  visibility: visible !important;
  opacity: 1 !important;
  left: 5px;
  max-width: 400px;
  padding: 8px 12px !important;
  /* Text styling when content is not wrapped in <p> */
  font-family: "Gilroy";
  font-style: normal;
  font-weight: 500;
  font-size: 12px;
  color: white;
  text-align: center;
}

/* for keyboard navigation, the position can't be obtained from the mouse */
[class*="__react_component_tooltip"]:not(.toolTipReact) {
  border-radius: 7px !important;
  left: -999em !important;
  visibility: visible !important;
  opacity: 1!important;
}

/* same reason, arrow can't be placed effectively */
[class*="__react_component_tooltip"]:not(.toolTipReact)::after {
  content: none !important;
}
